name: deploy-website
on:
  push:
    branches:
      - '*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: arstulke/sign-detection/emscripten-opencv

jobs:
  build-and-deploy-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ github.ref_name }}
          flavor: ${{ github.ref == 'refs/heads/main' && 'latest=true' || '' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: docker
          file: docker/emscripten-opencv.dockerfile
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Printing Docker images
        run: docker image ls ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Push Docker image
        if: ${{ (github.ref == 'refs/heads/main') || (github.ref == 'refs/heads/dev') }}
        uses: docker/build-push-action@v4
        with:
          context: docker
          file: docker/emscripten-opencv.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha

      - name: Cache deno deps
        run: deno cache ./package-as-npm.ts ./src/ts/deps.ts
        working-directory: lib/
      - name: Build library
        run: ./build.sh ${{ github.ref_name }}
        working-directory: lib/

      - name: Test library
        run: ./test.ts
        working-directory: lib/
      - name: Upload test output as artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-output
          path: lib/img/out/
          retention-days: 7

      - name: Install frontend deps
        run: |
          npm install
        working-directory: frontend/
      - name: Build frontend
        run: |
          npm run lint
          npm run build
        working-directory: frontend/
        
      - name: Deploy frontend to Github Pages
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: frontend/dist
          repository-name: arstulke/arstulke.github.io
          branch: main
          commit-message: "Deploying apps/sign-detection"
          target-folder: apps/sign-detection
          ssh-key: ${{ secrets.DEPLOY_GH_PAGES_KEY }}
